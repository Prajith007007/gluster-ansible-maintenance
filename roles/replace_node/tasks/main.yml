---
# Create tmp dir for storing peer data
- name: Create temporary storage directory
  tempfile:
    state: directory
    suffix: _peer
  register: tmpdir
  delegate_to: 127.0.0.1
  run_once: True

# Set the glusterd location
- name: Set the path of glusterd.info file
  set_fact:
    glusterd_libdir: "/var/lib/glusterd"
    peer_tmp_dir: "{{ tmpdir['path'] }}"

# In case of HCI installation, ensure to move the machines to maintenance mode.
- block:
    - name: Obtain SSO token with using username/password credentials
      ovirt_auth:
        url: "{{ gluster_maintenance_ovirt_url }}"
        username: "{{ gluster_maintenance_ovirt_username }}"
        ca_file: "{{ gluster_maintenance_ovirt_cafile | default('') }}"
        password: "{{ gluster_maintenance_ovirt_password }}"

    - ovirt_hosts:
        state: maintenance
        name: "{{ gluster_maintenance_old_node }}"
        auth: "{{ ovirt_auth }}"
  when: gluster_maintenance_ovirt_url is defined

- import_tasks: peers.yml

- import_tasks: volume.yml

# Storage moved to new node, restore the hosts
- ovirt_hosts:
    state: present
    name: "{{ gluster_maintenance_new_node }}"
    auth: "{{ ovirt_auth }}"
  when: gluster_maintenance_ovirt_url is defined

# Ensure to delete the temporary directory
- name: Delete the temporary directory
  file:
    state: absent
    path: "{{ peer_tmp_dir }}"
  delegate_to: 127.0.0.1
  run_once: True
